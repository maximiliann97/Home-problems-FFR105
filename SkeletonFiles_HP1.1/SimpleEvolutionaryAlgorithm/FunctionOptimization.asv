clear all;
clc;

populationSize = 30;
numberOfGenes = 40;
crossoverProbability = 0.8;
mutationProbability = 0.025;
tournamentSelectionParameter = 0.75;
variableRange = 3.0;
numberOfGenerations = 100;
fitness = zeros(populationSize,1);


fitnessFigureHandle = figure;
hold on;
set(fitnessFigureHandle, "Position", [50,50,500,200]);
set(fitnessFigureHandle, "DoubleBuffer","on");
axis([1 numberOfGenerations 2.5 3]);
bestPlotHandle = plot(1:numberOfGenerations,zeros(1,numberOfGenerations));
textHandle = text(30,2.6,sprintf("best: %4.3f",0.0));
hold off;
drawnow;



surfaceFigureHandle = figure;
hold on;
set(surfaceFigureHandle, 'DoubleBuffer','on');
delta = 0.1;
limit = fix(2*variableRange/delta) + 1;
[xValues,yValues] = meshgrid(−variableRange:delta:variableRange,...
29 −variableRange:delta:variableRange);
30 zValues = zeros(limit,limit);
31 for j = 1:limit
32 for k = 1:limit
33 zValues(j,k) = ...
34 EvaluateIndividual([xValues(j,k) yValues(j,k)]);
35 end
36 end
37 surfl(xValues,yValues,zValues)
38 colormap gray;
39 shading interp;
40 view([−7 −9 10]);
41 decodedPopulation = zeros(populationSize,2);
42 populationPlotHandle = plot3(decodedPopulation(:,1), ...
43 decodedPopulation(:,2),fitness(:),'kp');
44 hold off;
45 drawnow;




population = InitializePopulation(populationSize, numberOfGenes);

for iGeneration = 1:numberOfGenerations
    maximumFitness = 0.0; % Assumes non-negative fitness values
    xBest = zeros(1,2); % [0, 0]
    bestIndividualIndex = 0;
    for i = 1:populationSize
        chromosome = population(i,:);
        x = DecodeChromosome(chromosome, variableRange);
        fitness(i) = EvaluateIndividual(x);
        if (fitness(i) > maximumFitness)
            maximumFitness = fitness(i);
            bestIndividualIndex = i;
            xBest = x;
        end
    end

% Printout
disp('xBest');
disp(xBest);
disp('maximumFitness');
dist(maximumFitness);

tempPopulation = population;

for i = 1:2:populationSize
    i1 = TournamentSelect(fitness,tournamentSelectionParameter);
    i2 = TournamentSelect(fitness,tournamentSelectionParameter);
    chromosome1 = population(i1,:);
    chromosome2 = population(i2,:);

    r = rand;
    if (r < crossoverProbability)
        newChromosomePair = Cross(chromosome1,chromosome2);
        tempPopulation(i,:) = chromosome1;
        tempPopulation(1+i,:) = chromosome2;
    else
        tempPopulation(i,:) = chromosome1;
        tempPopulation(i+1,:) = chromosome2;
    end
end % Loop over population

for i = 1:populationSize
    originalChromosome = tempPopulation(i,:);
    mutatedChromomsome = Mutate(originalChromosome,mutationProbability);
    tempPopulation(i,:) = mutatedChromomsome;
end

tempPopulation(1,:) = population(bestIndividualIndex,:);
population = tempPopulation;

plotvector = get(bestPlotHandle,"YData");
plotvector(iGeneration) = maximumFitness;
set(bestPlotHandle,"YData",plotvector);
set(textHandle,"String",sprintf("best: %4.3f",maximumFitness));
drawnow;

end % Loop over generations

% Print final result
disp('xBest')
disp(xBest)
disp('maximumFitness')
disp(maximumFitness)



